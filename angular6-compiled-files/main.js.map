{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<header>\\n    <div class=\\\"navbar navbar-dark bg-dark box-shadow\\\">\\n        <div class=\\\"container d-flex justify-content-between\\\">\\n            <a href=\\\"#\\\" class=\\\"navbar-brand d-flex align-items-center\\\">\\n\\n                <strong>United Airlines</strong>\\n            </a>\\n\\n        </div>\\n    </div>\\n</header>\\n<main role=\\\"main\\\">\\n\\n    <div class=\\\"container containerUnitedairline\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"!searchComplete\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <form class=\\\"needs-validation\\\" novalidate [formGroup]=\\\"flightSearchForm\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12 mb-3\\\">\\n                            <span class=\\\"switchsearch\\\" *ngIf=\\\"!searchflightnumber\\\" (click)=\\\"switchsearch()\\\">Search with flight Number</span>\\n                            <span class=\\\"switchsearch\\\" *ngIf=\\\"!searchorigindes\\\" (click)=\\\"switchsearch()\\\">Search with Origin/Destination</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mb-3\\\" *ngIf=\\\"searchflightnumber\\\">\\n                        <label for=\\\"flightnumber\\\" class=\\\"required\\\">Flight Number</label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\">#</span>\\n                            </div>\\n                            <input type=\\\"text\\\" pInputText class=\\\"form-control\\\" formControlName=\\\"flightNumber\\\" placeholder=\\\"Flight Number\\\">\\n                            <div class=\\\"invalid-feedback\\\" style=\\\"width: 100%;\\\">\\n                                Your flightnumber is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\" *ngIf=\\\"searchorigindes\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"origin\\\" class=\\\"required\\\">Origin</label>\\n                            <input type=\\\"text\\\" pInputText class=\\\"form-control\\\" placeholder=\\\"Origin\\\" formControlName=\\\"origin\\\">\\n                            <div class=\\\"invalid-feedback\\\">\\n                                Valid origin is required.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"destination\\\" class=\\\"required\\\">Destination</label>\\n                            <input type=\\\"text\\\" pInputText class=\\\"form-control\\\" placeholder=\\\"Destination\\\" formControlName=\\\"destination\\\">\\n                            <div class=\\\"invalid-feedback\\\">\\n                                Valid destination is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"origin\\\">From</label><br>\\n\\n                            <p-calendar [inline]=\\\"true\\\" [minDate]=\\\"today\\\" formControlName=\\\"fromdate\\\"></p-calendar>\\n\\n\\n\\n                            <!--  <p-calendar [showIcon]=\\\"true\\\" [maxDate]=\\\"maxCatchupDateValue\\\" readonlyInput=\\\"true\\\" dateFormat=\\\"mm/dd/yy\\\" formControlName=\\\"catupDate\\\" placeholder=\\\"MM/DD/YYYY\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"1970:2030\\\"></p-calendar>-->\\n\\n                            <div class=\\\"invalid-feedback\\\">\\n                                Valid fromdate is required.\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6 mb-3\\\">\\n                            <label for=\\\"destination\\\">To</label><br>\\n                            <p-calendar [inline]=\\\"true\\\" formControlName=\\\"todate\\\" [minDate]=\\\"this.flightSearchForm.get('fromdate').value\\\"></p-calendar>\\n                            <div class=\\\"invalid-feedback\\\">\\n                                Valid todate is required.\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                    <hr class=\\\"mb-4\\\">\\n                    <button pButton icon=\\\"pi pi-check\\\" iconPos=\\\"left\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" type=\\\"button\\\" [disabled]=\\\"!flightSearchForm.valid\\\" (click)=\\\"searchflight()\\\">Continue to Flight Search</button>\\n\\n                </form>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"col-md-12 mb-3\\\" *ngIf=\\\"searchComplete\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 mb-3\\\">\\n\\n                    <span class=\\\"switchsearch\\\" (click)=\\\"searchComplete=!searchComplete\\\">Return to search</span>\\n                </div>\\n                <div class=\\\"col-md-12 mb-3\\\">\\n                    <h4>Search Results</h4>\\n                </div>\\n            </div>\\n\\n\\n            <p-table [value]=\\\"searchResults\\\" class=\\\"tableclass\\\">\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>arrival</th>\\n                        <th>carrier</th>\\n                        <th>departure</th>\\n                        <th>destination</th>\\n                        <th>distance</th>\\n                        <th>flightNumber</th>\\n                        <th>origin</th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-record>\\n                    <tr>\\n                        <td>{{record.aircraft}}</td>\\n                        <td>{{record.arrival | date:'MM/dd/yyyy'}}</td>\\n                        <td>{{record.carrier}}</td>\\n                        <td>{{record.departure | date:'MM/dd/yyyy'}}</td>\\n                        <td>{{record.destination}}</td>\\n                        <td>{{record.distance}}</td>\\n                        <td>{{record.flightNumber}}</td>\\n                        <td>{{record.origin}}</td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n\\n        </div>\\n    </div>\\n</main>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormControl, NgModel } from '@angular/forms';\nimport { CalendarModule, DropdownModule, DataTableModule, InputTextModule, AccordionModule } from 'primeng/primeng';\nimport { FlightSearchService } from './app.service';\nimport {TableModule} from 'primeng/table';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  searchflightnumber: boolean = false;\n  searchorigindes: boolean = true;\n  today = new Date();\n  flightSearchForm: FormGroup;\n  searchComplete:boolean=true;\n  searchResults:any= [];\n\n  constructor(private fb: FormBuilder, private service: FlightSearchService) {\n    this.searchForm();\n  }\n\n\n  searchForm() {\n    this.flightSearchForm = this.fb.group({\n      flightNumber: [null],\n      destination: [null],//, [Validators.required, Validators.minLength(3)]\n      origin: [null],\n      fromdate: [null],\n      todate: [null]\n    }, {\n        validator: (group) => {\n          if (this.searchflightnumber) {\n            return Validators.required((group.controls.flightNumber))\n          }\n          if (this.searchorigindes) {\n            return Validators.required((group.controls.destination))\n          }\n          return null;\n        }\n      });\n  }\n  searchflight() {\n    let form = this.flightSearchForm.value;\n    var params = \"ori=\"+form.origin+\"&des=\"+form.destination+\"&from=\"+form.fromdate+\"&to=\"+form.todate;    \n     if (this.searchflightnumber) {\n       params = \"flightNumber=\"+form.flightNumber+\"&from=\"+form.fromdate+\"&to=\"+form.todate; \n     }\n    this.service.search(params).subscribe(\n      data => {\n      //  debugger;\n        this.searchComplete = true;\n        this.searchResults = data;\n      },\n      error => {\n        alert('Service failed; Please check stubs.')\n      }\n    );\n  }\n  switchsearch() {\n    this.searchflightnumber = !this.searchflightnumber;\n    this.searchorigindes = !this.searchorigindes;\n    this.flightSearchForm.patchValue({\n      flightNumber: '', destination: '', origin: ''\n    })\n    /* this.flightSearchForm.get('flightNumber').clearValidators();\n     this.flightSearchForm.get('origin').clearValidators();\n     this.flightSearchForm.get('destination').clearValidators();\n \n     if (this.searchflightnumber) {\n       this.flightSearchForm.get('flightNumber').setValidators([Validators.required, Validators.minLength(4)]);\n       this.flightSearchForm.get('flightNumber').updateValueAndValidity();\n     }else {\n       this.flightSearchForm.get('origin').setValidators([Validators.required, Validators.minLength(3)]);\n       this.flightSearchForm.get('origin').updateValueAndValidity();\n       this.flightSearchForm.get('destination').setValidators([Validators.required, Validators.minLength(3)]);\n        this.flightSearchForm.get('destination').updateValueAndValidity();\n     }*/\n  }\n}\n","import { NgModule , CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CalendarModule, DropdownModule, DataTableModule, InputTextModule, DialogModule,AccordionModule} from 'primeng/primeng';\nimport {TableModule} from 'primeng/table';\n\nimport { AppComponent } from './app.component';\nimport { FlightSearchService } from './app.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CalendarModule, DropdownModule, DataTableModule, TableModule,InputTextModule, DialogModule,AccordionModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [FlightSearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n//import 'rxjs/add/operator/map';\r\n//import 'rxjs/add/operator/catch';\r\n//import 'rxjs/Rx';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class FlightSearchService {\r\n\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    search(params): Observable<any> {\r\n        var url = \"http://localhost:8882/searchFlights?\"+params;\r\n        return this.http.get(url)//.pipe(map((response: any) => response.json()));\r\n            //.pipe(map((res: Response) => { return res; }))\r\n            /*.catch((err: Response | any) => {\r\n                return Observable.throw(err.statusText);\r\n            });*/\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}